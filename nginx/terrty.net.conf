server {
	ssl_certificate /etc/nginx/ssl/le-crt.pem;
	ssl_certificate_key /etc/nginx/ssl/le-key.pem;
	ssl_trusted_certificate /etc/nginx/ssl/le-chain-crt.pem;
	ssl_session_timeout 5m;
	ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
        ssl_prefer_server_ciphers on;

	resolver 8.8.8.8 [2001:4860:4860::8888];
	ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1 TLSv1;
	ssl_stapling on;
	ssl_stapling_verify on;

	listen 443 deferred http2 reuseport ssl;
	listen [::]:443 deferred http2 reuseport ssl ipv6only=on;
	server_name terrty.net;
	root /usr/share/nginx/html;
	index index.html;
	autoindex off;
	charset utf-8;

	access_log /var/log/nginx/access.log main;

	add_header Strict-Transport-Security 'max-age=31536000; includeSubdomains; preload' always;
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

	location / {
		try_files $uri $uri/ =404;
	}

	# silly let's encrypt
	location ~ /\.well-known {}

	location ~ /\. {
		access_log off;
		log_not_found off;
		deny all;
	}

	location ~ ~$ {
		access_log off;
		log_not_found off;
		deny all;
	}

	location = /atom.xml {
		return 301 https://terrty.net/index.xml;
	}

	location = /robots.txt {
		access_log off;
		log_not_found off;
		expires 1y;
		add_header Cache-Control public,max-age=259200;
	}

	location = /favicon.ico {
		access_log off;
		log_not_found off;
		expires 1y;
		add_header Cache-Control public,max-age=259200;
	}

	location = /favicon.png {
		access_log off;
		log_not_found off;
		expires 1y;
		add_header Cache-Control public,max-age=259200;
	}

	location ~* \.(jpg|jpeg|png|gif|ico|css|js|mp3)$ {
		expires 30d;
		add_header Cache-Control public,max-age=259200;
	}

	location /cv/ {
		autoindex on;
	}


}

server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;
	server_name .terrty.net .terrty.com;

	root /usr/share/nginx/html;

	location /.well-known/ {} # silly let's encrypt

	location / {
		return 301 https://terrty.net$request_uri;
	}

}
